#%RAML 1.0
title: Share My Desk
description: RAML spec for complete API
version: v1
baseUri: /api/v1/

/apidoc:
  description: Describes the share my desk API
  get:
    description: Describes the share my desk API
/auth:
  /signup:
    post:
      description: Register for the application
      body:
        application/json:
          type: |
            {
              "type": "object",
              "$schema": "http://json-schema.org/draft-03/schema",
              "id": "http://jsonschema.net",
              "required": true,
              "properties": {
                "email": {
                  "type":"string",
                  "required": true
                },
                "name": {
                  "type": "string",
                  "required": true
                }
              }
            }
          example: |
            {
              "email": "bishalsemail@example.com",
              "name": "Bishal"
            }
      responses:
        200:
          description: Success
          body:
            application/json:
              example: |
                {
                  "success": true
                }

        500:
          description: Failure
          body:
            application/json:
              example: |
                {
                  "success":false,
                  "message": "REASON FOR FAILURE",
                  "errcode": "ERRCODE"
                }

  /login:
    post:
      description: Login to the application
      body:
        application/json:
          type: |
            {
              "type": "object",
              "$schema": "http://json-schema.org/draft-03/schema",
              "id": "http://jsonschema.net",
              "required": true,
              "properties": {
                "email": {
                  "type":"string",
                  "required": true
                },
                "secret": {
                  "type": "string",
                  "required": true
                }
              }
            }
          example: |
            {
              "email": "bishalsemail@example.com",
              "secret": "123456"
            } 
      responses:
        200:
          description: Success
          body: 
            application/json:
              example: |
                {
                  "success": true
                }
        
        500:
          description: Failure
          body:
            application/json:
              example: |
                {
                  "success":false,
                  "message": "REASON FOR FAILURE",
                  "errcode": "ERRCODE"
                }

/getAvailableDesks:
  description: Returns a list of desks posted for the specified search parameters
  get:
    description: Returns a list of desks posted for the specified search parameters
    queryParameters:

      campusID:
        displayName: Campus ID
        description: Campus ID ex. WF, BW, WP, WB
        type: string
        required: true
      searchDate: 
        displayName: Search Date
        description: Search date
        type: string
        required: true
      showBookedDesks:
        displayName: Show Booked Desks
        description: Show the desks which are already booked
        type: boolean
        required: false
    responses:
      200:
        description: Request Successful
        body:
          application/json:
            example: |
              {
                "success":true,
                "available_desks": []
              }
      500:
        description: Failure
        body:
          application/json:
            example: |
              {
                "success":false,
                "message": "REASON FOR FAILURE",
                "errcode": "ERRCODE"
              }

/shareMyDesk:
  description: Share your desk availablility for given date(s)
  post:
    description: Share your desk availablility for given date(s)
    body:
      application/json:
        type: |
          {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "http://jsonschema.net",
            "required": true,
            "properties": {
              "datesAvailable": {
                "type":"array",
                "required": true
              },
              "deskNumber": {
                "type": "string",
                "required": true
              },
              "notes": {
                "type": "string",
                "required": false
              },
              "directions": {
                "type": "string",
                "required": false
              },
              "closest_room_name": {
                "type": "string",
                "required": false
              }
            }
          }
        example: |
          {
            "datesAvailable": ["23 Jan","24 Jan"],
            "deskNumber": "111",
            "notes": "2 Monitors and a dock for thinkpad avaialble",
            "directions": "Next to the kitchen in 6th floor",
            "closest_room_name": "BIR_D"
          }
    responses:
      200:
        description: Request Successful
        body:
          application/json:
            example: |
              {
                "success": true
              }
      500:
        description: Failure
        body:
          application/json:
            example: |
              {
                "success": false,
                "message": "REASON FOR FAILURE",
                "errcode": "ERRCODE"
              }


# To be designed
/getMyShareHistory:
  description: Returns a full history of shared occassions
  get:

# To be designed
/unshareMyDesk:
  description: Undo the share of desk
  post:

/getOfficeLocations:
  description: list of office locations
  get:
    responses:
      200:
        description: Request Successful
        body:
          application/json:
            example: |
              {
                "success": true
              }
      500:
        description: Failure
        body:
          application/json:
            example: |
              {
                "success": false,
                "message": "REASON FOR FAILURE",
                "errcode": "ERRCODE"
              }